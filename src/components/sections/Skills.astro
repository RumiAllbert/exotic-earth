---
import Section from "../Section.astro";
import { skills } from "@cv";
import { Icon } from 'astro-icon/components';

type IconMap = {
  [key: string]: string;
};

const skillCategories = [
	"Core Competencies",
	"Programming & Scripting Languages",
	"Machine Learning & AI",
	"Data Science & Analytics",
	"Big Data & Cloud Technologies",
	"Software Development & DevOps",
	"Databases & Data Storage"
];

export const iconMap = {
  javascript: "simple-icons:javascript",
  php: "simple-icons:php",
  python: "simple-icons:python",
  react: "simple-icons:react",
  nodejs: "simple-icons:nodedotjs",
  typescript: "simple-icons:typescript",
  apachesuperset: "simple-icons:apachesuperset",
  html: "simple-icons:html5",
  css: "simple-icons:css3",
  ollama: "simple-icons:ollama",
  plotly: "simple-icons:plotly",
  fastapi: "simple-icons:fastapi",
  qgis: "simple-icons:qgis",
  "node.js": "simple-icons:nodedotjs",
  wordpress: "simple-icons:wordpress",
  sass: "simple-icons:sass",
  git: "simple-icons:git",
  github: "simple-icons:github",
  gitlab: "simple-icons:gitlab",
  docker: "simple-icons:docker",
  kubernetes: "simple-icons:kubernetes",
  hive: "simple-icons:apachehive",
  aws: "simple-icons:amazonaws",
  azure: "simple-icons:microsoftazure",
  gcp: "simple-icons:googlecloud",
  mysql: "simple-icons:mysql",
  postgresql: "simple-icons:postgresql",
  mongodb: "simple-icons:mongodb",
  redis: "simple-icons:redis",
  graphql: "simple-icons:graphql",
  rest: "simple-icons:openapiinitiative",
  java: "simple-icons:java",
  csharp: "simple-icons:csharp",
  cpp: "simple-icons:cplusplus",
  swift: "simple-icons:swift",
  kotlin: "simple-icons:kotlin",
  flutter: "simple-icons:flutter",
  angular: "simple-icons:angular",
  vue: "simple-icons:vuedotjs",
  svelte: "simple-icons:svelte",
  nextjs: "simple-icons:nextdotjs",
  nuxtjs: "simple-icons:nuxtdotjs",
  gatsby: "simple-icons:gatsby",
  webpack: "simple-icons:webpack",
  googlecloud: "simple-icons:googlecloud",
  babel: "simple-icons:babel",
  eslint: "simple-icons:eslint",
  jest: "simple-icons:jest",
  mocha: "simple-icons:mocha",
  cypress: "simple-icons:cypress",
  selenium: "simple-icons:selenium",
  jenkins: "simple-icons:jenkins",
  travis: "simple-icons:travisci",
  circleci: "simple-icons:circleci",
  nginx: "simple-icons:nginx",
  apache: "simple-icons:apache",
  linux: "simple-icons:linux",
  ubuntu: "simple-icons:ubuntu",
  centos: "simple-icons:centos",
  bash: "simple-icons:gnubash",
  powershell: "simple-icons:powershell",
  tensorflow: "simple-icons:tensorflow",
  mathematica: "simple-icons:wolframmathematica",
  go: "simple-icons:go",
  huggingface: "simple-icons:huggingface",
  openai: "simple-icons:openai",
  pytorch: "simple-icons:pytorch",
  pandas: "simple-icons:pandas",
  numpy: "simple-icons:numpy",
  scikitlearn: "simple-icons:scikitlearn",
  jupyter: "simple-icons:jupyter",
  tableau: "simple-icons:tableau",
  powerbi: "simple-icons:powerbi",
  r: "simple-icons:r",
  scala: "simple-icons:scala",
  hadoop: "simple-icons:apachehadoop",
  spark: "simple-icons:apachespark",
  kafka: "simple-icons:apachekafka",
  elasticsearch: "simple-icons:elasticsearch",
  kibana: "simple-icons:kibana",
  logstash: "simple-icons:logstash",
  jira: "simple-icons:jira",
  confluence: "simple-icons:confluence",
  trello: "simple-icons:trello",
  slack: "simple-icons:slack",
  figma: "simple-icons:figma",
  adobexd: "simple-icons:adobexd",
  sketch: "simple-icons:sketch",
  photoshop: "simple-icons:adobephotoshop",
  meta: "simple-icons:meta",
  coursera: "simple-icons:coursera",
  udacity: "simple-icons:udacity",
  datacamp: "simple-icons:datacamp",
  edx: "simple-icons:edx",
  linkedin: "simple-icons:linkedin",
  google: "simple-icons:google",
  microsoft: "simple-icons:microsoft",
  ibm: "simple-icons:ibm",
  illustrator: "simple-icons:adobeillustrator",
};

function getIconName(keyword: string) {
	const lowercaseKeyword = keyword.toLowerCase().replace(/\s+/g, '');
	return (iconMap as IconMap)[lowercaseKeyword] || null;
}
---

<Section className={Astro.props.className} title="Skills">
	{skillCategories.map((category) => (
		<div class="mb-4">
				<h3 class="text-lg font-semibold mb-2">{category}</h3>
				<ul class="inline-flex flex-wrap gap-2">
					{skills
						.filter(skill => skill.name === category)
						.flatMap(({ keywords }) => keywords)
						.map((keyword) => {
							const iconName = getIconName(keyword);
							return (
								<li class={`text-sm rounded px-2 py-1 flex items-center gap-1 ${
									category === "Core Competencies"
										? "core-competency bg-blue-200 text-blue-800 text-base"
										: "bg-skin-button-accent/20 text-skin-base dark:text-white"
								}`}>
									{iconName && <Icon name={iconName} class={`w-4 h-4 ${category === "Core Competencies" ? "w-5 h-5" : ""}`} />}
									{keyword}
								</li>
							);
						})
					}
				</ul>
		</div>
	))}
</Section>
